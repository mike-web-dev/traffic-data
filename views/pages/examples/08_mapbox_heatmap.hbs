{{#section 'header'}}
    <style>
        /* Map Legend */
        .mapLegend {
            position: absolute;
            bottom: 30px;
            right: 10px;
            width: 150px;
            background-color: rgba(255, 255, 255, 0.5);
            z-index: 1;
            padding: 10px 10px 5px;
            font-family: "Poppins", sans-serif;
            display: none;
        }

        .legendSubTitle {
            font-size: 0.6rem;
        }

        .legendItems {
            display: flex;
            flex-direction: row;
            justify-content: space-evenly;
            align-items: flex-end;
        }

        .legendItem {
            display: flex;
            flex-direction: column;
            text-align: center;
        }

        .circle-5 {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: rgb(255,235,59);
            border: 1px solid #fff;
        }

        .circle-10 {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: rgb(255,179,0);
            border: 1px solid #fff;
        }

        .circle-20 {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: rgb(229,57,53);
            border: 1px solid #fff;
        }

    </style>

{{/section}}

<div class="mapContainer">
    <div id="map" class="map">
        <!--Legend-->
        <div class="mapLegend">

            <p class="legendTitle mb-0">Legend</p>

            <p class="legendSubTitle text-white text-uppercase mb-1">Number Casualties</p>

            <div class="legendItems">
                <div class="legendItem mr-2">
                    <div class="circle-5 mb-1"></div>
                    <label class="text-white ">0</label>
                </div>

                <div class="legendItem">
                    <div class="circle-10 mb-1"></div>
                    <label class="text-white ">5</label>
                </div>

                <div class="legendItem">
                    <div class="circle-20 mb-1"></div>
                    <label class="text-white ">9</label>
                </div>

            </div>

        </div>
    </div>
    {{> info}}
</div>


{{#section 'script'}}

    <script>

        // Mapbox token
        mapboxgl.accessToken = "{{mapboxToken}}";

        // Create the Map
        let map = new mapboxgl.Map({
            container: 'map', // container id
            style: 'mapbox://styles/mapbox/dark-v10', // stylesheet location
            center: [-3.70, 50.72], // starting position [lng, lat]
            zoom: 8 // starting zoom
        });

        // Bounding Box (bbox) for Devon
        let bbox = [
            [-2.83, 51.25],
            [-4.56, 50.18]
        ];

        // Set the map to the bbox
        map.fitBounds(bbox, {
            padding: 20 // Add some padding around bbox
        });

        // Add Navigation control
        map.addControl(new mapboxgl.NavigationControl(), 'top-left');

        // Add Current Location control
        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true
        }), 'top-left');

        // Add map Scale
        map.addControl(new mapboxgl.ScaleControl({
            maxWidth: 80,
            unit: 'metric'
        }), 'bottom-left');


        // Create Popup
        let popup = new mapboxgl.Popup({
            closeButton: false,
            closeOnClick: false,
            maxWidth: '350px'
        });

        // Map is Loaded
        map.on('load', function () {

            // Add layer from Mapbox
            map.addSource('locations', {
                type: 'vector',
                url: 'mapbox://msharp.djfxp1xa'
            });

            // Create Layer from Source
            map.addLayer({
                'id': 'points',
                'source': 'locations',
                'source-layer': 'traffic_accidents-3hr2et',
                'type': 'heatmap',
                // set the style of the features
                'paint': {
                    // Increase the heatmap weight based on frequency and property Number_of_Casualties
                    'heatmap-weight': [
                        'interpolate',
                        ['linear'],
                        ['get', 'Number_of_Casualties'],
                        0,
                        0,
                        5,
                        1
                    ],
                    // Increase the heatmap color weight weight by zoom level
                    // heatmap-intensity is a multiplier on top of heatmap-weight
                    'heatmap-intensity': [
                        'interpolate',
                        ['linear'],
                        ['zoom'],
                        0,
                        1,
                        9,
                        3
                    ],
                    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).
                    // Begin color ramp at 0-stop with a 0-transparancy color
                    // to create a blur-like effect.
                    'heatmap-color': [
                        'interpolate',
                        ['linear'],
                        ['heatmap-density'],
                        0,
                        'rgba(255,235,59,0.0)',
                        0.4,
                        'rgba(255,235,59,0.67)',
                        0.6,
                        'rgb(255,179,0)',
                        0.8,
                        'rgb(251,140,0)',
                        1,
                        'rgb(229,57,53)'
                    ],
                    // Adjust the heatmap radius by zoom level
                    'heatmap-radius': [
                        'interpolate',
                        ['linear'],
                        ['zoom'],
                        0,
                        2,
                        9,
                        20
                    ],
                    // Transition from heatmap to circle layer by zoom level
                    'heatmap-opacity': [
                        'interpolate',
                        ['linear'],
                        ['zoom'],
                        0,
                        1,
                        20,
                        0
                    ]
                }
            });

            map.addLayer(
                    {
                        'id': 'locations-points',
                        'type': 'circle',
                        'source': 'locations',
                        'source-layer': 'traffic_accidents-3hr2et',
                        'minzoom': 12,
                        'paint': {
                            // Size circle radius by Number_of_Casualties and zoom level
                            'circle-radius': [
                                'interpolate',
                                ['linear'],
                                ['zoom'],
                                7,
                                ['interpolate', ['linear'], ['get', 'Number_of_Casualties'], 1, 1, 3, 6],
                                16,
                                ['interpolate', ['linear'], ['get', 'Number_of_Casualties'], 1, 5, 10, 20]
                            ],
                            // Color circle by Number_of_Casualties
                            'circle-color': [
                                'interpolate',
                                ['linear'],
                                ['get', 'Number_of_Casualties'],
                                0,
                                'rgba(255,235,59,0.5)',
                                3,
                                'rgb(255,179,0)',
                                7,
                                'rgb(251,140,0)',
                                9,
                                'rgb(229,57,53)'
                            ],
                            'circle-stroke-color': 'white',
                            'circle-stroke-width': 1,
                            // Transition from heatmap to circle layer by zoom level
                            'circle-opacity': [
                                'interpolate',
                                ['linear'],
                                ['zoom'],
                                7,
                                0,
                                8,
                                1
                            ]
                        }
                    }
            );

            // Show hide the legend base on zoom level and layer visibility
            map.on('zoomend', function () {
                if(map.getZoom() > 12){
                    $('.mapLegend').show();
                } else {
                    $('.mapLegend').hide();
                }
            });

            // Change the cursor style as a UI indicator.
            map.on('mouseenter', 'locations-points', function (e) {
                map.getCanvas().style.cursor = 'pointer';
            });

            // Change the cursor style to default.
            map.on('mouseleave', 'locations-points', function () {
                map.getCanvas().style.cursor = '';
            });

            // if no features selected close popup and reset layer paint properties
            map.on('click', function () {
                popup.remove();
            });

            // Map Interaction - Click on Feature
            map.on('click', 'locations-points', function (e) {

                // features exist
                if (e.features.length > 0) {
                    // select closest/first feature
                    let selected = e.features[0];

                    // Create a Coordinates pair
                    let coordinates = selected.geometry.coordinates.slice();

                    // Ensure that if the map is zoomed out such that multiple
                    // copies of the feature are visible, the popup appears
                    // over the copy being pointed to.
                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                    }

                    // Animate map to location
                    map.easeTo({center: coordinates});

                    //Create the popup description
                    let description = `
                    <div id="customPopupDetails" class="card border-light mb-3">
                        <div class="card-header bg-primary text-white border-0">
                            Accident Index - ` + selected.properties.Accident_Index + `
                            <a type="button" class="close" onclick="popup.remove()">×</a>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-6">
                                    <label class="text-muted">Severity</label>
                                    <p>` + selected.properties.Accident_Severity + `</p>
                                </div>
                                <div class="col-6">
                                    <label class="text-muted">Number of Casualties</label>
                                    <p>` + selected.properties.Number_of_Casualties + `</p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <label class="text-muted">Date</label>
                                    <p>` + selected.properties.Date + `</p>
                                </div>
                                <div class="col-6">
                                    <label class="text-muted">Time</label>
                                    <p>` + selected.properties.Time + `</p>
                                </div>
                            </div>
                        </div>
                    </div>`;

                    // Add the Popup to the map
                    popup
                            .setLngLat(coordinates)
                            .setHTML(description)
                            .addTo(map);
                }
            });
        });

    </script>
{{/section}}
